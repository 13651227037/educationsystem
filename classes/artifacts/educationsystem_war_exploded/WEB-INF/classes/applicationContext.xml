<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
">
    <context:component-scan base-package="cn.beijing.ssfh.services" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <aop:aspectj-autoproxy proxy-target-class="true"/>


    <context:property-placeholder location="classpath*:jdbc.properties"></context:property-placeholder>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="typeAliasesPackage" value="cn.beijing.ssfh.entity"/>-->
        <!--<property name="typeAliasesPackage" value="cn.beijing.ssfh.pojo.vo"/>-->
        <property name="mapperLocations" value="classpath*:/mapper/*.xml"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>
                            <!--你可以配置helperDialect属性来指定分页插件使用哪种方言-->
                            helperDialect=mysql
                            <!--分页分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询-->
                            reasonable=true
                        </value>
                        
                    </property>
                </bean>
            </array>
        </property>

        <!-- mybatis配置文件 -->
        <property name="configLocation" value="classpath:mybatisconfig.xml"></property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.beijing.ssfh.mapper"/>
    </bean>
    <bean id="txmanager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="txmanager">
        <tx:attributes>
            <tx:method name="query*" propagation="SUPPORTS"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="select*" propagation="SUPPORTS"/>
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="edit*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="new*" propagation="REQUIRED" />
            <tx:method name="set*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="change*" propagation="REQUIRED" />
            <tx:method name="check*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="load*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <bean id="securityHandler" class="cn.beijing.ssfh.aop.printinfo.SecurityHandler" />
    <aop:config>
        <aop:aspect id="securityAspect" ref="securityHandler">
            <!-- <aop:pointcut id="addAddMethod" expression="execution(* add*(..))"/> -->

            <!-- 操作日志的处理 -->
            <aop:pointcut id="addAddMethod" expression="execution(* cn.beijing.ssfh.services.*.*.*.*.*(..)) ||execution(* cn.beijing.ssfh.services.*.*.*.*.*(..)) ||execution(* cn.beijing.ssfh.services.*.*.*.*.*(..))"/>
            <aop:before method="checkSecurity" pointcut-ref="addAddMethod"/>
            <aop:after method="checkSecurity" pointcut-ref="addAddMethod"/>

            <!-- 异常日志的处理 -->
            <!-- <aop:pointcut id="after异常增强" expression="execution(* com.tgb.spring.*.*(..)) || args(name)"/> -->
            <aop:after-throwing method="doThrowing" pointcut="execution(* cn.beijing.ssfh.services.*.*.*.*.*(..))" throwing="ex"/>

        </aop:aspect>
    </aop:config>
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* cn.beijing.ssfh.services.*.*.*.*.*(..))"></aop:pointcut>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>


    <context:component-scan base-package="cn.beijing.ssfh.aop"/>
    <context:component-scan base-package="cn.beijing.ssfh.services"/>
    <aop:aspectj-autoproxy/>

    <import resource="classpath*:spring-shiro.xml"/>




</beans>